services: 
  mongodb1:
    image: mongo:8.0.4
    container_name: mongodb1
    ports:
      - "27017:27017"
    volumes:
      - mongo_data1:/data/db
    networks:
      - my_network
    restart: always
    environment:
      - MONGO_INITDB_REPLICA_SET_NAME=rs0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongodb2:
    image: mongo:8.0.4
    container_name: mongodb2
    ports:
      - "27018:27017"
    volumes:
      - mongo_data2:/data/db
    networks:
      - my_network
    restart: always
    environment:
      - MONGO_INITDB_REPLICA_SET_NAME=rs0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  mongodb3:
    image: mongo:8.0.4
    container_name: mongodb3
    ports:
      - "27019:27017"
    volumes:
      - mongo_data3:/data/db
    networks:
      - my_network
    restart: always
    environment:
      - MONGO_INITDB_REPLICA_SET_NAME=rs0
    command: ["mongod", "--replSet", "rs0", "--bind_ip_all"]

  data_pipeline:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: data_pipeline
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME}
      - MONGO_HOST=mongodb1
      - MONGO_PORT=27017
    volumes:
      - ./:/app
    networks:
      - my_network
    command: >
      sh -c "
      poetry run python transform_data.py &&
      poetry run python insert_data.py
      "
    restart: no

volumes:
  mongo_data1:
  mongo_data2:
  mongo_data3:

networks:
  my_network:
    driver: bridge